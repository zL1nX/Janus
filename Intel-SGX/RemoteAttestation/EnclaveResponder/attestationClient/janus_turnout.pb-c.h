/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: janus_turnout.proto */

#ifndef PROTOBUF_C_janus_5fturnout_2eproto__INCLUDED
#define PROTOBUF_C_janus_5fturnout_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct DeviceCondition DeviceCondition;
typedef struct AttestationState AttestationState;


/* --- enums --- */


/* --- messages --- */

struct  DeviceCondition
{
  ProtobufCMessage base;
  uint32_t device_condition;
  char *aid;
};
#define DEVICE_CONDITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&device_condition__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  AttestationState
{
  ProtobufCMessage base;
  uint32_t attestation_state;
  char *aid;
  char *vid;
};
#define ATTESTATION_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&attestation_state__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* DeviceCondition methods */
void   device_condition__init
                     (DeviceCondition         *message);
size_t device_condition__get_packed_size
                     (const DeviceCondition   *message);
size_t device_condition__pack
                     (const DeviceCondition   *message,
                      uint8_t             *out);
size_t device_condition__pack_to_buffer
                     (const DeviceCondition   *message,
                      ProtobufCBuffer     *buffer);
DeviceCondition *
       device_condition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   device_condition__free_unpacked
                     (DeviceCondition *message,
                      ProtobufCAllocator *allocator);
/* AttestationState methods */
void   attestation_state__init
                     (AttestationState         *message);
size_t attestation_state__get_packed_size
                     (const AttestationState   *message);
size_t attestation_state__pack
                     (const AttestationState   *message,
                      uint8_t             *out);
size_t attestation_state__pack_to_buffer
                     (const AttestationState   *message,
                      ProtobufCBuffer     *buffer);
AttestationState *
       attestation_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   attestation_state__free_unpacked
                     (AttestationState *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DeviceCondition_Closure)
                 (const DeviceCondition *message,
                  void *closure_data);
typedef void (*AttestationState_Closure)
                 (const AttestationState *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor device_condition__descriptor;
extern const ProtobufCMessageDescriptor attestation_state__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_janus_5fturnout_2eproto__INCLUDED */
