# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: janus_attestation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='janus_attestation.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x17janus_attestation.proto\"4\n\tChallenge\x12\r\n\x05nonce\x18\x01 \x01(\t\x12\x0b\n\x03\x61id\x18\x02 \x01(\t\x12\x0b\n\x03vid\x18\x03 \x01(\t\"&\n\x06Report\x12\x0f\n\x07payload\x18\x01 \x01(\t\x12\x0b\n\x03\x61id\x18\x02 \x01(\t\"\"\n\x06Verify\x12\x0b\n\x03vid\x18\x01 \x01(\t\x12\x0b\n\x03\x61id\x18\x02 \x03(\t\"(\n\tAttResult\x12\x0e\n\x06result\x18\x01 \x01(\r\x12\x0b\n\x03vid\x18\x02 \x01(\tb\x06proto3')
)




_CHALLENGE = _descriptor.Descriptor(
  name='Challenge',
  full_name='Challenge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='Challenge.nonce', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aid', full_name='Challenge.aid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vid', full_name='Challenge.vid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=79,
)


_REPORT = _descriptor.Descriptor(
  name='Report',
  full_name='Report',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='Report.payload', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aid', full_name='Report.aid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=81,
  serialized_end=119,
)


_VERIFY = _descriptor.Descriptor(
  name='Verify',
  full_name='Verify',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vid', full_name='Verify.vid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aid', full_name='Verify.aid', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=155,
)


_ATTRESULT = _descriptor.Descriptor(
  name='AttResult',
  full_name='AttResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='AttResult.result', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vid', full_name='AttResult.vid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=197,
)

DESCRIPTOR.message_types_by_name['Challenge'] = _CHALLENGE
DESCRIPTOR.message_types_by_name['Report'] = _REPORT
DESCRIPTOR.message_types_by_name['Verify'] = _VERIFY
DESCRIPTOR.message_types_by_name['AttResult'] = _ATTRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Challenge = _reflection.GeneratedProtocolMessageType('Challenge', (_message.Message,), dict(
  DESCRIPTOR = _CHALLENGE,
  __module__ = 'janus_attestation_pb2'
  # @@protoc_insertion_point(class_scope:Challenge)
  ))
_sym_db.RegisterMessage(Challenge)

Report = _reflection.GeneratedProtocolMessageType('Report', (_message.Message,), dict(
  DESCRIPTOR = _REPORT,
  __module__ = 'janus_attestation_pb2'
  # @@protoc_insertion_point(class_scope:Report)
  ))
_sym_db.RegisterMessage(Report)

Verify = _reflection.GeneratedProtocolMessageType('Verify', (_message.Message,), dict(
  DESCRIPTOR = _VERIFY,
  __module__ = 'janus_attestation_pb2'
  # @@protoc_insertion_point(class_scope:Verify)
  ))
_sym_db.RegisterMessage(Verify)

AttResult = _reflection.GeneratedProtocolMessageType('AttResult', (_message.Message,), dict(
  DESCRIPTOR = _ATTRESULT,
  __module__ = 'janus_attestation_pb2'
  # @@protoc_insertion_point(class_scope:AttResult)
  ))
_sym_db.RegisterMessage(AttResult)


# @@protoc_insertion_point(module_scope)
