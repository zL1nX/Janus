/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: janus_attestation.proto */

#ifndef PROTOBUF_C_janus_5fattestation_2eproto__INCLUDED
#define PROTOBUF_C_janus_5fattestation_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Challenge Challenge;
typedef struct Report Report;
typedef struct Verify Verify;
typedef struct AttResult AttResult;


/* --- enums --- */


/* --- messages --- */

struct  Challenge
{
  ProtobufCMessage base;
  char *nonce;
  char *aid;
  char *vid;
};
#define CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&challenge__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Report
{
  ProtobufCMessage base;
  char *payload;
  char *aid;
};
#define REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&report__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Verify
{
  ProtobufCMessage base;
  char *vid;
  size_t n_aid;
  char **aid;
};
#define VERIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&verify__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  AttResult
{
  ProtobufCMessage base;
  uint32_t result;
  char *vid;
};
#define ATT_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&att_result__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/* Challenge methods */
void   challenge__init
                     (Challenge         *message);
size_t challenge__get_packed_size
                     (const Challenge   *message);
size_t challenge__pack
                     (const Challenge   *message,
                      uint8_t             *out);
size_t challenge__pack_to_buffer
                     (const Challenge   *message,
                      ProtobufCBuffer     *buffer);
Challenge *
       challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   challenge__free_unpacked
                     (Challenge *message,
                      ProtobufCAllocator *allocator);
/* Report methods */
void   report__init
                     (Report         *message);
size_t report__get_packed_size
                     (const Report   *message);
size_t report__pack
                     (const Report   *message,
                      uint8_t             *out);
size_t report__pack_to_buffer
                     (const Report   *message,
                      ProtobufCBuffer     *buffer);
Report *
       report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   report__free_unpacked
                     (Report *message,
                      ProtobufCAllocator *allocator);
/* Verify methods */
void   verify__init
                     (Verify         *message);
size_t verify__get_packed_size
                     (const Verify   *message);
size_t verify__pack
                     (const Verify   *message,
                      uint8_t             *out);
size_t verify__pack_to_buffer
                     (const Verify   *message,
                      ProtobufCBuffer     *buffer);
Verify *
       verify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   verify__free_unpacked
                     (Verify *message,
                      ProtobufCAllocator *allocator);
/* AttResult methods */
void   att_result__init
                     (AttResult         *message);
size_t att_result__get_packed_size
                     (const AttResult   *message);
size_t att_result__pack
                     (const AttResult   *message,
                      uint8_t             *out);
size_t att_result__pack_to_buffer
                     (const AttResult   *message,
                      ProtobufCBuffer     *buffer);
AttResult *
       att_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   att_result__free_unpacked
                     (AttResult *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Challenge_Closure)
                 (const Challenge *message,
                  void *closure_data);
typedef void (*Report_Closure)
                 (const Report *message,
                  void *closure_data);
typedef void (*Verify_Closure)
                 (const Verify *message,
                  void *closure_data);
typedef void (*AttResult_Closure)
                 (const AttResult *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor challenge__descriptor;
extern const ProtobufCMessageDescriptor report__descriptor;
extern const ProtobufCMessageDescriptor verify__descriptor;
extern const ProtobufCMessageDescriptor att_result__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_janus_5fattestation_2eproto__INCLUDED */
